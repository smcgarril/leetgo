name: CI/CD Pipeline

on:
  push:
    branches:
      # - main
      - "*"
  pull_request:
    branches:
      # - main
      - "*"

env:
  DOCKERHUB_REPO: smcgarril/leetgo

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [server, worker]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Set up Go Modules
        run: |
          cd ${{ matrix.component }}
          go mod tidy
          go mod download

      - name: Run unit tests
        run: |
          cd ${{ matrix.component }}
          go test -v ./...

      # - name: generate test coverage
      #   run: |
      #     cd ${{ matrix.component }}
      #     go test -v ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./...

      # - name: check test coverage
      #   uses: vladopajic/go-test-coverage@v2
      #   with:
      #     config: ./.testcoverage.yml
      #     profile: ${{ matrix.component }}/cover.out
      #     local-prefix: "github.com/smcgarril/leetgo/${{ matrix.component }}"

      - name: Run static code analysis (golangci-lint)
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $GOPATH/bin v1.50.1
          cd ${{ matrix.component }}
          golangci-lint run --timeout 5m

  # build-and-push:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       component: [server, worker]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USER }}
  #         password: ${{ secrets.DOCKERHUB_PASSWORD }}

  #     - name: Build Docker image
  #       run: |
  #         docker build -t $DOCKERHUB_REPO/${{ matrix.component }}:latest ${{ matrix.component }}

  #     - name: Push Docker image to Docker Hub
  #       run: |
  #         docker tag $DOCKERHUB_REPO/${{ matrix.component }}:latest $DOCKERHUB_REPO/${{ matrix.component }}:${{ github.run_number }}
  #         docker push $DOCKERHUB_REPO/${{ matrix.component }}:latest
  #         docker push $DOCKERHUB_REPO/${{ matrix.component }}:${{ github.run_number }}

  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to Fly.io
  #       run: |
  #         flyctl auth docker
  #         flyctl deploy --image $DOCKERHUB_REPO/server:${{ github.run_number }} --app your-fly-app-name
